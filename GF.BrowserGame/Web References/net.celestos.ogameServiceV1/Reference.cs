//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GF.BrowserGame.net.celestos.ogameServiceV1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="https://ogameservicev1.azurewebsites.net")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserAccountValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartApplicationSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationSessionUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndApplicationSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetupApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpgradeApplicationVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsToolValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserAllowedToUseThisToolOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestToolVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCommunityDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateApplicationExceptionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateApplicationWebClientExceptionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkUserAccountToUniverseAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronizeCredentialsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::GF.BrowserGame.Properties.Settings.Default.GF_BrowserGame_net_celestos_ogameServiceV1_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event IsUserAccountValidCompletedEventHandler IsUserAccountValidCompleted;
        
        /// <remarks/>
        public event RegisterApplicationCompletedEventHandler RegisterApplicationCompleted;
        
        /// <remarks/>
        public event StartApplicationSessionCompletedEventHandler StartApplicationSessionCompleted;
        
        /// <remarks/>
        public event UpdateApplicationSessionUserIdCompletedEventHandler UpdateApplicationSessionUserIdCompleted;
        
        /// <remarks/>
        public event UpdateApplicationSessionCompletedEventHandler UpdateApplicationSessionCompleted;
        
        /// <remarks/>
        public event EndApplicationSessionCompletedEventHandler EndApplicationSessionCompleted;
        
        /// <remarks/>
        public event SetupApplicationCompletedEventHandler SetupApplicationCompleted;
        
        /// <remarks/>
        public event UpgradeApplicationVersionCompletedEventHandler UpgradeApplicationVersionCompleted;
        
        /// <remarks/>
        public event GetUserIdCompletedEventHandler GetUserIdCompleted;
        
        /// <remarks/>
        public event IsToolValidCompletedEventHandler IsToolValidCompleted;
        
        /// <remarks/>
        public event IsUserAllowedToUseThisToolCompletedEventHandler IsUserAllowedToUseThisToolCompleted;
        
        /// <remarks/>
        public event GetLatestToolVersionCompletedEventHandler GetLatestToolVersionCompleted;
        
        /// <remarks/>
        public event GetUserCommunityDataCompletedEventHandler GetUserCommunityDataCompleted;
        
        /// <remarks/>
        public event CreateApplicationExceptionLogCompletedEventHandler CreateApplicationExceptionLogCompleted;
        
        /// <remarks/>
        public event CreateApplicationWebClientExceptionLogCompletedEventHandler CreateApplicationWebClientExceptionLogCompleted;
        
        /// <remarks/>
        public event LinkUserAccountToUniverseAccountCompletedEventHandler LinkUserAccountToUniverseAccountCompleted;
        
        /// <remarks/>
        public event SynchronizeCredentialsCompletedEventHandler SynchronizeCredentialsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/Ping", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/IsUserAccountValid", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid IsUserAccountValid() {
            object[] results = this.Invoke("IsUserAccountValid", new object[0]);
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserAccountValidAsync() {
            this.IsUserAccountValidAsync(null);
        }
        
        /// <remarks/>
        public void IsUserAccountValidAsync(object userState) {
            if ((this.IsUserAccountValidOperationCompleted == null)) {
                this.IsUserAccountValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserAccountValidOperationCompleted);
            }
            this.InvokeAsync("IsUserAccountValid", new object[0], this.IsUserAccountValidOperationCompleted, userState);
        }
        
        private void OnIsUserAccountValidOperationCompleted(object arg) {
            if ((this.IsUserAccountValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserAccountValidCompleted(this, new IsUserAccountValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/RegisterApplication", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> RegisterApplication(System.Guid toolId, string computerName) {
            object[] results = this.Invoke("RegisterApplication", new object[] {
                        toolId,
                        computerName});
            return ((System.Nullable<System.Guid>)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterApplicationAsync(System.Guid toolId, string computerName) {
            this.RegisterApplicationAsync(toolId, computerName, null);
        }
        
        /// <remarks/>
        public void RegisterApplicationAsync(System.Guid toolId, string computerName, object userState) {
            if ((this.RegisterApplicationOperationCompleted == null)) {
                this.RegisterApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterApplicationOperationCompleted);
            }
            this.InvokeAsync("RegisterApplication", new object[] {
                        toolId,
                        computerName}, this.RegisterApplicationOperationCompleted, userState);
        }
        
        private void OnRegisterApplicationOperationCompleted(object arg) {
            if ((this.RegisterApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterApplicationCompleted(this, new RegisterApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/StartApplicationSession", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long StartApplicationSession(System.Guid applicationKey, System.Guid toolId, string toolVersion, string computerName) {
            object[] results = this.Invoke("StartApplicationSession", new object[] {
                        applicationKey,
                        toolId,
                        toolVersion,
                        computerName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void StartApplicationSessionAsync(System.Guid applicationKey, System.Guid toolId, string toolVersion, string computerName) {
            this.StartApplicationSessionAsync(applicationKey, toolId, toolVersion, computerName, null);
        }
        
        /// <remarks/>
        public void StartApplicationSessionAsync(System.Guid applicationKey, System.Guid toolId, string toolVersion, string computerName, object userState) {
            if ((this.StartApplicationSessionOperationCompleted == null)) {
                this.StartApplicationSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartApplicationSessionOperationCompleted);
            }
            this.InvokeAsync("StartApplicationSession", new object[] {
                        applicationKey,
                        toolId,
                        toolVersion,
                        computerName}, this.StartApplicationSessionOperationCompleted, userState);
        }
        
        private void OnStartApplicationSessionOperationCompleted(object arg) {
            if ((this.StartApplicationSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartApplicationSessionCompleted(this, new StartApplicationSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/UpdateApplicationSessionUserId", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationSessionUserId(System.Guid applicationKey, long applicationSessionId, bool isPublicComputer) {
            object[] results = this.Invoke("UpdateApplicationSessionUserId", new object[] {
                        applicationKey,
                        applicationSessionId,
                        isPublicComputer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationSessionUserIdAsync(System.Guid applicationKey, long applicationSessionId, bool isPublicComputer) {
            this.UpdateApplicationSessionUserIdAsync(applicationKey, applicationSessionId, isPublicComputer, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationSessionUserIdAsync(System.Guid applicationKey, long applicationSessionId, bool isPublicComputer, object userState) {
            if ((this.UpdateApplicationSessionUserIdOperationCompleted == null)) {
                this.UpdateApplicationSessionUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationSessionUserIdOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationSessionUserId", new object[] {
                        applicationKey,
                        applicationSessionId,
                        isPublicComputer}, this.UpdateApplicationSessionUserIdOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationSessionUserIdOperationCompleted(object arg) {
            if ((this.UpdateApplicationSessionUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationSessionUserIdCompleted(this, new UpdateApplicationSessionUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/UpdateApplicationSession", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationSession(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity) {
            object[] results = this.Invoke("UpdateApplicationSession", new object[] {
                        applicationKey,
                        applicationSessionId,
                        lastActivity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationSessionAsync(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity) {
            this.UpdateApplicationSessionAsync(applicationKey, applicationSessionId, lastActivity, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationSessionAsync(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity, object userState) {
            if ((this.UpdateApplicationSessionOperationCompleted == null)) {
                this.UpdateApplicationSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationSessionOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationSession", new object[] {
                        applicationKey,
                        applicationSessionId,
                        lastActivity}, this.UpdateApplicationSessionOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationSessionOperationCompleted(object arg) {
            if ((this.UpdateApplicationSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationSessionCompleted(this, new UpdateApplicationSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/EndApplicationSession", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EndApplicationSession(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity, System.DateTime endTime) {
            object[] results = this.Invoke("EndApplicationSession", new object[] {
                        applicationKey,
                        applicationSessionId,
                        lastActivity,
                        endTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EndApplicationSessionAsync(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity, System.DateTime endTime) {
            this.EndApplicationSessionAsync(applicationKey, applicationSessionId, lastActivity, endTime, null);
        }
        
        /// <remarks/>
        public void EndApplicationSessionAsync(System.Guid applicationKey, long applicationSessionId, System.DateTime lastActivity, System.DateTime endTime, object userState) {
            if ((this.EndApplicationSessionOperationCompleted == null)) {
                this.EndApplicationSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndApplicationSessionOperationCompleted);
            }
            this.InvokeAsync("EndApplicationSession", new object[] {
                        applicationKey,
                        applicationSessionId,
                        lastActivity,
                        endTime}, this.EndApplicationSessionOperationCompleted, userState);
        }
        
        private void OnEndApplicationSessionOperationCompleted(object arg) {
            if ((this.EndApplicationSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndApplicationSessionCompleted(this, new EndApplicationSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/SetupApplication", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetupApplication(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion) {
            object[] results = this.Invoke("SetupApplication", new object[] {
                        toolId,
                        applicationKey,
                        prevToolVersion,
                        newToolVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetupApplicationAsync(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion) {
            this.SetupApplicationAsync(toolId, applicationKey, prevToolVersion, newToolVersion, null);
        }
        
        /// <remarks/>
        public void SetupApplicationAsync(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion, object userState) {
            if ((this.SetupApplicationOperationCompleted == null)) {
                this.SetupApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetupApplicationOperationCompleted);
            }
            this.InvokeAsync("SetupApplication", new object[] {
                        toolId,
                        applicationKey,
                        prevToolVersion,
                        newToolVersion}, this.SetupApplicationOperationCompleted, userState);
        }
        
        private void OnSetupApplicationOperationCompleted(object arg) {
            if ((this.SetupApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetupApplicationCompleted(this, new SetupApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/UpgradeApplicationVersion", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpgradeApplicationVersion(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion) {
            object[] results = this.Invoke("UpgradeApplicationVersion", new object[] {
                        toolId,
                        applicationKey,
                        prevToolVersion,
                        newToolVersion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpgradeApplicationVersionAsync(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion) {
            this.UpgradeApplicationVersionAsync(toolId, applicationKey, prevToolVersion, newToolVersion, null);
        }
        
        /// <remarks/>
        public void UpgradeApplicationVersionAsync(System.Guid toolId, System.Guid applicationKey, string prevToolVersion, string newToolVersion, object userState) {
            if ((this.UpgradeApplicationVersionOperationCompleted == null)) {
                this.UpgradeApplicationVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpgradeApplicationVersionOperationCompleted);
            }
            this.InvokeAsync("UpgradeApplicationVersion", new object[] {
                        toolId,
                        applicationKey,
                        prevToolVersion,
                        newToolVersion}, this.UpgradeApplicationVersionOperationCompleted, userState);
        }
        
        private void OnUpgradeApplicationVersionOperationCompleted(object arg) {
            if ((this.UpgradeApplicationVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpgradeApplicationVersionCompleted(this, new UpgradeApplicationVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/GetUserId", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid GetUserId() {
            object[] results = this.Invoke("GetUserId", new object[0]);
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIdAsync() {
            this.GetUserIdAsync(null);
        }
        
        /// <remarks/>
        public void GetUserIdAsync(object userState) {
            if ((this.GetUserIdOperationCompleted == null)) {
                this.GetUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIdOperationCompleted);
            }
            this.InvokeAsync("GetUserId", new object[0], this.GetUserIdOperationCompleted, userState);
        }
        
        private void OnGetUserIdOperationCompleted(object arg) {
            if ((this.GetUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIdCompleted(this, new GetUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/IsToolValid", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsToolValid(System.Guid toolId, string toolVersion) {
            object[] results = this.Invoke("IsToolValid", new object[] {
                        toolId,
                        toolVersion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsToolValidAsync(System.Guid toolId, string toolVersion) {
            this.IsToolValidAsync(toolId, toolVersion, null);
        }
        
        /// <remarks/>
        public void IsToolValidAsync(System.Guid toolId, string toolVersion, object userState) {
            if ((this.IsToolValidOperationCompleted == null)) {
                this.IsToolValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsToolValidOperationCompleted);
            }
            this.InvokeAsync("IsToolValid", new object[] {
                        toolId,
                        toolVersion}, this.IsToolValidOperationCompleted, userState);
        }
        
        private void OnIsToolValidOperationCompleted(object arg) {
            if ((this.IsToolValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsToolValidCompleted(this, new IsToolValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/IsUserAllowedToUseThisTool", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserAllowedToUseThisTool(System.Guid toolId) {
            object[] results = this.Invoke("IsUserAllowedToUseThisTool", new object[] {
                        toolId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserAllowedToUseThisToolAsync(System.Guid toolId) {
            this.IsUserAllowedToUseThisToolAsync(toolId, null);
        }
        
        /// <remarks/>
        public void IsUserAllowedToUseThisToolAsync(System.Guid toolId, object userState) {
            if ((this.IsUserAllowedToUseThisToolOperationCompleted == null)) {
                this.IsUserAllowedToUseThisToolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserAllowedToUseThisToolOperationCompleted);
            }
            this.InvokeAsync("IsUserAllowedToUseThisTool", new object[] {
                        toolId}, this.IsUserAllowedToUseThisToolOperationCompleted, userState);
        }
        
        private void OnIsUserAllowedToUseThisToolOperationCompleted(object arg) {
            if ((this.IsUserAllowedToUseThisToolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserAllowedToUseThisToolCompleted(this, new IsUserAllowedToUseThisToolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/GetLatestToolVersion", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestToolVersion(System.Guid toolId) {
            object[] results = this.Invoke("GetLatestToolVersion", new object[] {
                        toolId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestToolVersionAsync(System.Guid toolId) {
            this.GetLatestToolVersionAsync(toolId, null);
        }
        
        /// <remarks/>
        public void GetLatestToolVersionAsync(System.Guid toolId, object userState) {
            if ((this.GetLatestToolVersionOperationCompleted == null)) {
                this.GetLatestToolVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestToolVersionOperationCompleted);
            }
            this.InvokeAsync("GetLatestToolVersion", new object[] {
                        toolId}, this.GetLatestToolVersionOperationCompleted, userState);
        }
        
        private void OnGetLatestToolVersionOperationCompleted(object arg) {
            if ((this.GetLatestToolVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestToolVersionCompleted(this, new GetLatestToolVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/GetUserCommunityData", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserCommunityData(System.Guid toolId) {
            object[] results = this.Invoke("GetUserCommunityData", new object[] {
                        toolId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCommunityDataAsync(System.Guid toolId) {
            this.GetUserCommunityDataAsync(toolId, null);
        }
        
        /// <remarks/>
        public void GetUserCommunityDataAsync(System.Guid toolId, object userState) {
            if ((this.GetUserCommunityDataOperationCompleted == null)) {
                this.GetUserCommunityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCommunityDataOperationCompleted);
            }
            this.InvokeAsync("GetUserCommunityData", new object[] {
                        toolId}, this.GetUserCommunityDataOperationCompleted, userState);
        }
        
        private void OnGetUserCommunityDataOperationCompleted(object arg) {
            if ((this.GetUserCommunityDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCommunityDataCompleted(this, new GetUserCommunityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/CreateApplicationExceptionLog", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateApplicationExceptionLog(System.Guid applicationKey, System.Guid toolId, string type, string description, string message, string stack, string innerExceptionMessage) {
            object[] results = this.Invoke("CreateApplicationExceptionLog", new object[] {
                        applicationKey,
                        toolId,
                        type,
                        description,
                        message,
                        stack,
                        innerExceptionMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateApplicationExceptionLogAsync(System.Guid applicationKey, System.Guid toolId, string type, string description, string message, string stack, string innerExceptionMessage) {
            this.CreateApplicationExceptionLogAsync(applicationKey, toolId, type, description, message, stack, innerExceptionMessage, null);
        }
        
        /// <remarks/>
        public void CreateApplicationExceptionLogAsync(System.Guid applicationKey, System.Guid toolId, string type, string description, string message, string stack, string innerExceptionMessage, object userState) {
            if ((this.CreateApplicationExceptionLogOperationCompleted == null)) {
                this.CreateApplicationExceptionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateApplicationExceptionLogOperationCompleted);
            }
            this.InvokeAsync("CreateApplicationExceptionLog", new object[] {
                        applicationKey,
                        toolId,
                        type,
                        description,
                        message,
                        stack,
                        innerExceptionMessage}, this.CreateApplicationExceptionLogOperationCompleted, userState);
        }
        
        private void OnCreateApplicationExceptionLogOperationCompleted(object arg) {
            if ((this.CreateApplicationExceptionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateApplicationExceptionLogCompleted(this, new CreateApplicationExceptionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/CreateApplicationWebClientExceptionLog", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateApplicationWebClientExceptionLog(System.Guid applicationKey, System.Guid toolId, string type, string url, string description, string message, string stack, string innerExceptionMessage) {
            object[] results = this.Invoke("CreateApplicationWebClientExceptionLog", new object[] {
                        applicationKey,
                        toolId,
                        type,
                        url,
                        description,
                        message,
                        stack,
                        innerExceptionMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateApplicationWebClientExceptionLogAsync(System.Guid applicationKey, System.Guid toolId, string type, string url, string description, string message, string stack, string innerExceptionMessage) {
            this.CreateApplicationWebClientExceptionLogAsync(applicationKey, toolId, type, url, description, message, stack, innerExceptionMessage, null);
        }
        
        /// <remarks/>
        public void CreateApplicationWebClientExceptionLogAsync(System.Guid applicationKey, System.Guid toolId, string type, string url, string description, string message, string stack, string innerExceptionMessage, object userState) {
            if ((this.CreateApplicationWebClientExceptionLogOperationCompleted == null)) {
                this.CreateApplicationWebClientExceptionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateApplicationWebClientExceptionLogOperationCompleted);
            }
            this.InvokeAsync("CreateApplicationWebClientExceptionLog", new object[] {
                        applicationKey,
                        toolId,
                        type,
                        url,
                        description,
                        message,
                        stack,
                        innerExceptionMessage}, this.CreateApplicationWebClientExceptionLogOperationCompleted, userState);
        }
        
        private void OnCreateApplicationWebClientExceptionLogOperationCompleted(object arg) {
            if ((this.CreateApplicationWebClientExceptionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateApplicationWebClientExceptionLogCompleted(this, new CreateApplicationWebClientExceptionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/LinkUserAccountToUniverseAccount", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LinkUserAccountToUniverseAccount(System.Guid universeId, long playerId, string playerName) {
            object[] results = this.Invoke("LinkUserAccountToUniverseAccount", new object[] {
                        universeId,
                        playerId,
                        playerName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LinkUserAccountToUniverseAccountAsync(System.Guid universeId, long playerId, string playerName) {
            this.LinkUserAccountToUniverseAccountAsync(universeId, playerId, playerName, null);
        }
        
        /// <remarks/>
        public void LinkUserAccountToUniverseAccountAsync(System.Guid universeId, long playerId, string playerName, object userState) {
            if ((this.LinkUserAccountToUniverseAccountOperationCompleted == null)) {
                this.LinkUserAccountToUniverseAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkUserAccountToUniverseAccountOperationCompleted);
            }
            this.InvokeAsync("LinkUserAccountToUniverseAccount", new object[] {
                        universeId,
                        playerId,
                        playerName}, this.LinkUserAccountToUniverseAccountOperationCompleted, userState);
        }
        
        private void OnLinkUserAccountToUniverseAccountOperationCompleted(object arg) {
            if ((this.LinkUserAccountToUniverseAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkUserAccountToUniverseAccountCompleted(this, new LinkUserAccountToUniverseAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ogameservicev1.azurewebsites.net/SynchronizeCredentials", RequestNamespace="https://ogameservicev1.azurewebsites.net", ResponseNamespace="https://ogameservicev1.azurewebsites.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SynchronizeCredentials(System.Guid universeId, long playerId, string playerName, string password) {
            object[] results = this.Invoke("SynchronizeCredentials", new object[] {
                        universeId,
                        playerId,
                        playerName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SynchronizeCredentialsAsync(System.Guid universeId, long playerId, string playerName, string password) {
            this.SynchronizeCredentialsAsync(universeId, playerId, playerName, password, null);
        }
        
        /// <remarks/>
        public void SynchronizeCredentialsAsync(System.Guid universeId, long playerId, string playerName, string password, object userState) {
            if ((this.SynchronizeCredentialsOperationCompleted == null)) {
                this.SynchronizeCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronizeCredentialsOperationCompleted);
            }
            this.InvokeAsync("SynchronizeCredentials", new object[] {
                        universeId,
                        playerId,
                        playerName,
                        password}, this.SynchronizeCredentialsOperationCompleted, userState);
        }
        
        private void OnSynchronizeCredentialsOperationCompleted(object arg) {
            if ((this.SynchronizeCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronizeCredentialsCompleted(this, new SynchronizeCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ogameservicev1.azurewebsites.net")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="https://ogameservicev1.azurewebsites.net", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private System.Nullable<System.Guid> toolIdField;
        
        private System.Nullable<System.Guid> applicationKeyField;
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> ToolId {
            get {
                return this.toolIdField;
            }
            set {
                this.toolIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> ApplicationKey {
            get {
                return this.applicationKeyField;
            }
            set {
                this.applicationKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUserAccountValidCompletedEventHandler(object sender, IsUserAccountValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserAccountValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserAccountValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RegisterApplicationCompletedEventHandler(object sender, RegisterApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<System.Guid> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.Guid>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void StartApplicationSessionCompletedEventHandler(object sender, StartApplicationSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartApplicationSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartApplicationSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateApplicationSessionUserIdCompletedEventHandler(object sender, UpdateApplicationSessionUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationSessionUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationSessionUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateApplicationSessionCompletedEventHandler(object sender, UpdateApplicationSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EndApplicationSessionCompletedEventHandler(object sender, EndApplicationSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndApplicationSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndApplicationSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetupApplicationCompletedEventHandler(object sender, SetupApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetupApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetupApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpgradeApplicationVersionCompletedEventHandler(object sender, UpgradeApplicationVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpgradeApplicationVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpgradeApplicationVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserIdCompletedEventHandler(object sender, GetUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsToolValidCompletedEventHandler(object sender, IsToolValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsToolValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsToolValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUserAllowedToUseThisToolCompletedEventHandler(object sender, IsUserAllowedToUseThisToolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserAllowedToUseThisToolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserAllowedToUseThisToolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLatestToolVersionCompletedEventHandler(object sender, GetLatestToolVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestToolVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestToolVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserCommunityDataCompletedEventHandler(object sender, GetUserCommunityDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCommunityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCommunityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateApplicationExceptionLogCompletedEventHandler(object sender, CreateApplicationExceptionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateApplicationExceptionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateApplicationExceptionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateApplicationWebClientExceptionLogCompletedEventHandler(object sender, CreateApplicationWebClientExceptionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateApplicationWebClientExceptionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateApplicationWebClientExceptionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LinkUserAccountToUniverseAccountCompletedEventHandler(object sender, LinkUserAccountToUniverseAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkUserAccountToUniverseAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkUserAccountToUniverseAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SynchronizeCredentialsCompletedEventHandler(object sender, SynchronizeCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchronizeCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchronizeCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591